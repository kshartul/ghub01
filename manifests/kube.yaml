apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None
  selector:
    app: nginx
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: gp2
  annotations: 
    storageclass.kubernetes.io/is-default-class: 'true'
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  encrypted: "true"
  zones: us-east-1a, us-east-1b
reclaimPolicy: Delete
mountOptions:
  - debug 
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: www
  labels:
    name: www
spec:
  storageClassName: gp2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 6Gi
    selector:
      matchLabels:
      aws-availability-zone: us-east-1a, us-east-1b
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
        app: nginx
  serviceName: "nginx"      
  replicas: 2
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: DOCKER_IMAGE
        imagePullPolicy: Always
        ports:
        - name: web
          containerPort: 80    
        resources:
          requests:
              cpu: 250m
              memory: 128Mi
          limits:
              cpu: 1000m
              memory: 256Mi
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi     

  